---
import { Image } from "astro:assets";
import Share from "@/components/Share.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import { humanize, markdownify, slugify } from "@/lib/utils/textConverter";
import { BiCalendarEdit, BiCategoryAlt } from "react-icons/bi";

const allAuthors = await getSinglePage("authors");
const books = await getSinglePage("books");
const { book } = Astro.props;
const { Content } = await book.render();
const { title, description, authors, categories, image, date, tags } =
  book.data;
---

<section class="section">
  <div class="container">
    <article class="row justify-center">
      <div class="md:col-10 text-center">
        <h1 set:html={markdownify(title)} class="h2" />
        <ul class="mt-4 flex flex-wrap items-center justify-center text-text">
          <li class="mx-3">
            {
              allAuthors
                .filter((author) =>
                  authors
                    .map((author: string) => slugify(author))
                    .includes(slugify(author.data.title)),
                )
                .map((author, i) => (
                  <a
                    href={`/authors/${slugify(author.slug)}`}
                    class="flex items-center hover:text-primary font-medium"
                  >
                    {author.data.image && (
                      <Image
                        src={author.data.image}
                        alt={author.data.title}
                        height={50}
                        width={50}
                        class="mr-2 h-6 w-6 rounded-full"
                      />
                    )}
                    <span>{author.data.title}</span>
                  </a>
                ))
            }
          </li>
          <li class="mx-3 flex items-center flex-wrap font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
            <>{dateFormat(date)}</>
          </li>
          <li class="mx-3 flex items-center flex-wrap">
            <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />
            <>
              <ul>
                {
                  categories.map((category: string, i: number) => (
                    <li class="inline-block">
                      <a
                        href={`/categories/${slugify(category)}`}
                        class="mr-2 hover:text-primary font-medium"
                      >
                        {humanize(category)}
                        {i !== book.data.categories.length - 1 && ","}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </>
          </li>
        </ul>
      </div>

      <div class="col-12 mt-8 mb-2">
        {
          image && (
            <Image
              src={image}
              height={260}
              width={480}
              alt={title}
              class="rounded-lg"
            />
          )
        }
      </div>

      <div class="md:col-10">
        <div class="content mb-16 text-left">
          <Content />
        </div>
        <div class="content text-left">
            <h2>Kitap Siparişi Formu</h2>
            <p>Satın alma işlemini gerçekleştirmek için ödemeyi MAR-SEV İşletmesi hesabına havale/EFT ile gerçekleştirip aşağıdaki formu doldurmanız rica olunur. 
                En kısa zamanda sizinle iletişime geçilecektir.
                </p>
                <p>
                <h5>Marmara sağlık eğitim ve araştırma vakfı işletmesi</h5>
                </p><p>
                <strong>TR78 0001 5001 5800 7316 4737 98</strong>
                </p>
        </div>
        <form class="contact-form row gy-2 justify-center mb-10" >
            <div class="lg:col-6">
              <label class="mb-2 block" for="name">İsim <span class="text-red-600">*</span></label>
              <input class="form-input w-full" name="name" type="text" required />
            </div>
            <div class="lg:col-6">
              <label class="mb-2 block" for="email">Email <span class="text-red-600">*</span></label>
              <input class="form-input w-full" name="email" type="email" required />
            </div>
            <div class="lg:col-6">
                <label class="mb-2 block" for="phone">Telefon <span class="text-red-600">*</span></label>
                <input class="form-input w-full" name="phone" type="text" required />
              </div>
              <div class="lg:col-6">
                <label class="mb-2 block" for="adres">Adres <span class="text-red-600">*</span></label>
                <input class="form-input w-full" name="adres" type="text" required />
              </div>
            <div class="col-12">
              <label class="mb-2 block" for="subject">Kitap</label>
              <input
                class="form-input w-full"
                name="subject"
                type="text"
                value={title}
              />
            </div>
            <div class="col-12">
              <button class="btn btn-primary mt-2" type="submit">Sipariş Talebi Oluştur</button>
            </div>
          </form>
  

        <div class="flex flex-wrap items-center justify-between">
          <ul class="mr-4 mb-4 space-x-3">
            {
              tags.map((tag: string) => (
                <li class="inline-block">
                  <a
                    href={`/tags/${slugify(tag)}`}
                    class="block rounded-lg bg-theme-light px-4 py-2 font-semibold text-dark text-sm hover:text-primary transition duration-300"
                  >
                    #{humanize(tag)}
                  </a>
                </li>
              ))
            }
          </ul>
          <Share
            className="social-share mb-4"
            title={title}
            description={description}
            slug={book.slug}
          />
        </div>
      </div>
    </article>
  </div>
</section>

<script>
  const form = document.querySelector('form');
  if(form) {
    form.addEventListener('submit', function(event) {
    event.preventDefault();
    
    const formData = new FormData(form);
    const data = {
        name: formData.get('name'),
        email: formData.get('email'),
        phone: formData.get('phone'),
        adres: formData.get('adres'),
        book: formData.get('subject'),
        
    };
    fetch('https://script.google.com/macros/s/AKfycby4SLG4R1SeQDYrV35bMak8CYfg9M0_Mqi--vJxY5dCOltru1KtvcJVDxk_pcet7lSlRw/exec', {
        method: 'POST',
        mode: "no-cors",
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(next =>console.log("success"))
    .catch(error => console.error('Error:', error));
    });

  }

</script>